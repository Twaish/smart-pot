name: Cloud CI/CD Pipeline

on:
  push:
    paths:
      - 'Cloud/**'
    branches:
      - Cloud  # Triggers on a push to the 'Cloud' branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20  # Set a timeout for the job to avoid infinite hangs

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log Project ID and Image Tag
        run: |
          echo "Project ID: ${{ secrets.GCP_PROJECT_ID }}"
          echo "Image: europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-app-repo:${{ github.sha }}"

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0'  # Specify your .NET Core version here

      - name: Build and Test Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ./Cloud
          file: ./Cloud/Dockerfile
          push: false
          tags: europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-app-repo:${{ github.sha }}
          load: true  # Load the built image into Docker daemon to test it afterwards

      - name: Test Application
        run: |
          docker run --name test-app europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-app-repo:${{ github.sha }} &
          sleep 10  # Wait for the application to start
          docker logs test-app
          docker stop test-app

      - name: Authenticate gcloud CLI
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: "gcloud"

      - name: Configure Docker to use the gcloud command-line tool as a credential helper
        run: gcloud auth configure-docker europe-north1-docker.pkg.dev --quiet

      - name: Push Docker Image to GCR
        run: |
          docker push europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-app-repo:${{ github.sha }}

      - name: Deploy to Google Cloud Compute Engine
        run: |
          gcloud compute instances create-with-container my-cloud-instance \
            --container-image europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-app-repo:${{ github.sha }} \
            --zone europe-north1-a \
            --machine-type e2-medium

      - name: Health Check
        run: |
          echo "Checking if the application is healthy..."
          sleep 30  # Wait a bit for the application to settle
          status_code=$(curl -o /dev/null -s -w "%{http_code}\n" http://EXTERNAL_IP/)
          if [ "$status_code" -ne 200 ]; then
            echo "Health check failed!"
            exit 1
          fi
          echo "Health check passed!"
